-- chezmoi:template:left-delimiter="-- [[" right-delimiter="]] --"
--
-- ██╗    ██╗███████╗███████╗████████╗███████╗██████╗ ███╗   ███╗
-- ██║    ██║██╔════╝╚══███╔╝╚══██╔══╝██╔════╝██╔══██╗████╗ ████║
-- ██║ █╗ ██║█████╗    ███╔╝    ██║   █████╗  ██████╔╝██╔████╔██║
-- ██║███╗██║██╔══╝   ███╔╝     ██║   ██╔══╝  ██╔══██╗██║╚██╔╝██║
-- ╚███╔███╔╝███████╗███████╗   ██║   ███████╗██║  ██║██║ ╚═╝ ██║
--  ╚══╝╚══╝ ╚══════╝╚══════╝   ╚═╝   ╚══════╝╚═╝  ╚═╝╚═╝     ╚═╝
--
-- WezTerm Configuration
-- This file controls terminal appearance, keybindings, and behavior
--

-- ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
-- ┃                          CORE INITIALIZATION                               ┃
-- ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

local wezterm = require 'wezterm'

-- Set up initial configuration
local config = {}
local act = wezterm.action
local mux = wezterm.mux

-- Use config_builder for better error reporting in newer WezTerm versions
if wezterm.config_builder then
  config = wezterm.config_builder()
end

-- ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
-- ┃                            EVENT HANDLERS                                  ┃
-- ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

-- Display toast notification when configuration is reloaded
wezterm.on('window-config-reloaded', function(window, pane)
  window:toast_notification('WezTerm', 'Configuration reloaded!', nil, 4000)
end)

-- Display error notifications when key bindings fail
wezterm.on('key-binding-error', function(window, pane, error_message)
  window:toast_notification(
    'Key Binding Error',
    error_message,
    {
      appearance = 'warning',
      dismiss_after_msec = 8000,
    }
  )
  wezterm.log_error('Key binding error: ' .. error_message)
end)

-- OS-specific startup handlers
-- [[ if eq .chezmoi.os "darwin" ]] --
-- Maximize window on macOS startup
wezterm.on("gui-startup", function()
  local tab, pane, window = mux.spawn_window({})
  window:gui_window():maximize()
end)
-- [[ else ]] --
-- Linux-specific handlers would go here
-- [[ end ]] --

-- ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
-- ┃                        KEYBOARD & INPUT SETTINGS                           ┃
-- ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

-- Set leader key to Ctrl+a with 2 second timeout
config.leader = {
  key = 'a', mods = 'CTRL',
  timeout_milliseconds = 2000,
}

-- International keyboard layout support settings
config.use_ime = true                                  -- Enable Input Method Editor for international layouts
config.treat_east_asian_ambiguous_width_as_wide = false-- Improve handling of East Asian characters
config.allow_win32_input_mode = false                  -- Disable Windows-specific input handling
config.enable_csi_u_key_encoding = false                -- Enable extended Unicode key support
config.use_dead_keys = true                            -- Enable dead keys for accent/diacritic input
config.enable_kitty_keyboard = false                    -- Enable Kitty keyboard protocol

-- Alt key configuration
config.send_composed_key_when_left_alt_is_pressed = true  -- Send composed characters with left Alt
config.send_composed_key_when_right_alt_is_pressed = true -- Send composed characters with right Alt (AltGr)

-- Disable default key bindings to avoid conflicts
config.disable_default_key_bindings = true

-- ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
-- ┃                              KEY BINDINGS                                  ┃
-- ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

config.keys = {
  -- Show debug overlay to troubleshoot key binding and other issues
  { key = 'D', mods = 'LEADER|SHIFT', action = act.ShowDebugOverlay },

  -- ╭─────────────────╮
  -- │ Copy and Paste  │
  -- ╰─────────────────╯
  -- [[ if eq .chezmoi.os "darwin" ]] --
  { key = 'c', mods = 'SUPER', action = act.CopyTo 'Clipboard' },
  { key = 'v', mods = 'SUPER', action = act.PasteFrom 'Clipboard' },
  -- [[ else ]] --
  { key = 'c', mods = 'CTRL|SHIFT', action = act.CopyTo 'Clipboard' },
  { key = 'v', mods = 'CTRL|SHIFT', action = act.PasteFrom 'Clipboard' },
  -- [[ end ]] --
  { key = 'Insert', mods = 'CTRL', action = act.CopyTo 'PrimarySelection' },
  { key = 'Insert', mods = 'SHIFT', action = act.PasteFrom 'PrimarySelection' },
  { key = ']', mods = 'LEADER', action = act.PasteFrom 'Clipboard' },

  -- ╭─────────────────╮
  -- │  Window & Tabs  │
  -- ╰─────────────────╯
  { key = 't', mods = 'LEADER', action = act.ToggleFullScreen },
  { key = 'c', mods = 'LEADER', action = act.SpawnTab 'CurrentPaneDomain' },
  { key = '&', mods = 'LEADER', action = act.CloseCurrentTab { confirm = true } },
  { key = 'x', mods = 'LEADER', action = act.CloseCurrentPane { confirm = true } },
  { key = 'r', mods = 'LEADER', action = act.ReloadConfiguration },
  { key = 'd', mods = 'LEADER', action = act.DetachDomain 'CurrentPaneDomain' },

  -- ╭─────────────────╮
  -- │  Tab Navigation │
  -- ╰─────────────────╯
  { key = 'Tab', mods = 'LEADER', action = act.ActivateTabRelative(1) },
  { key = 'Tab', mods = 'LEADER|SHIFT', action = act.ActivateTabRelative(-1) },
  { key = 'n', mods = 'LEADER', action = act.ActivateTabRelative(1) },
  { key = 'p', mods = 'LEADER', action = act.ActivateTabRelative(-1) },
  { key = '0', mods = 'LEADER', action = act.ActivateTab(0) },
  { key = '1', mods = 'LEADER', action = act.ActivateTab(1) },
  { key = '2', mods = 'LEADER', action = act.ActivateTab(2) },
  { key = '3', mods = 'LEADER', action = act.ActivateTab(3) },
  { key = '4', mods = 'LEADER', action = act.ActivateTab(4) },
  { key = '5', mods = 'LEADER', action = act.ActivateTab(5) },
  { key = '6', mods = 'LEADER', action = act.ActivateTab(6) },
  { key = '7', mods = 'LEADER', action = act.ActivateTab(7) },
  { key = '8', mods = 'LEADER', action = act.ActivateTab(8) },
  { key = '9', mods = 'LEADER', action = act.ActivateTab(9) },

  -- ╭─────────────────╮
  -- │  Pane Handling  │
  -- ╰─────────────────╯
  { key = 'v', mods = 'LEADER', action = act.SplitPane { direction = 'Right', size = { Percent = 50 } } },
  { key = 'h', mods = 'LEADER', action = act.SplitPane { direction = 'Down', size = { Percent = 50 } } },
  { key = 'z', mods = 'LEADER', action = act.TogglePaneZoomState },
  { key = 'o', mods = 'LEADER', action = act.RotatePanes 'Clockwise' },
  { key = 's', mods = 'LEADER', action = act.PaneSelect { mode = 'SwapWithActive' } },
  { key = 'w', mods = 'LEADER', action = act.PaneSelect },

  -- ╭─────────────────╮
  -- │ Pane Navigation │
  -- ╰─────────────────╯
  { key = 'LeftArrow', mods = 'LEADER', action = act.ActivatePaneDirection 'Left' },
  { key = 'RightArrow', mods = 'LEADER', action = act.ActivatePaneDirection 'Right' },
  { key = 'UpArrow', mods = 'LEADER', action = act.ActivatePaneDirection 'Up' },
  { key = 'DownArrow', mods = 'LEADER', action = act.ActivatePaneDirection 'Down' },

  -- ╭─────────────────╮
  -- │   UI Controls   │
  -- ╰─────────────────╯
  { key = 'P', mods = 'LEADER|SHIFT', action = act.ShowTabNavigator },
  { key = 'p', mods = 'LEADER', action = act.ShowLauncher },
  { key = 'k', mods = 'LEADER', action = act.ClearScrollback 'ScrollbackOnly' },
  { key = '[', mods = 'LEADER', action = act.ActivateCopyMode },
  { key = 'f', mods = 'LEADER', action = act.Search 'CurrentSelectionOrEmptyString' },
}

-- ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
-- ┃                             MOUSE BINDINGS                                 ┃
-- ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

config.mouse_bindings = {
  -- Open URLs with CMD on macOS or CTRL on other platforms
  {
    event = { Up = { streak = 1, button = 'Left' } },
    mods = -- [[ if eq .chezmoi.os "darwin" ]] --'CMD'-- [[ else ]] --'CTRL'-- [[ end ]] --,
    action = act.OpenLinkAtMouseCursor,
  },
}

-- ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
-- ┃                           APPEARANCE & THEME                               ┃
-- ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

-- Set color scheme
config.color_scheme = 'Catppuccin Mocha'

-- Make inactive panes slightly dimmer for better visual distinction
config.inactive_pane_hsb = {
  hue = 1.0,
  saturation = 0.7,
  brightness = 0.6,
}

-- Window padding
config.window_padding = { left = 0, right = 0, top = 0, bottom = '.5cell' }

-- Window appearance settings
config.window_decorations = "TITLE | RESIZE"        -- Show window title bar and resize controls
config.enable_scroll_bar = true
config.hide_mouse_cursor_when_typing = true

-- macOS-specific appearance settings
-- [[ if eq .chezmoi.os "darwin" ]] --
config.native_macos_fullscreen_mode = true          -- Use native macOS fullscreen
-- [[ end ]] --

-- Font configuration with fallback options
config.font = wezterm.font_with_fallback { 'FiraCode Nerd Font', 'Fira Code', 'monospace' }
config.font_size = 14.0
config.line_height = 1.1
-- Ligatures are enabled by default

-- Tab bar configuration
config.tab_bar_at_bottom = true                     -- Place tab bar at bottom of window
config.hide_tab_bar_if_only_one_tab = false         -- Always show tab bar for notifications
config.show_new_tab_button_in_tab_bar = false
config.use_fancy_tab_bar = false                    -- Use simple tab bar style

-- Cursor appearance
config.force_reverse_video_cursor = true            -- Use reverse video style cursor

-- ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
-- ┃                           TERMINAL BEHAVIOR                                ┃
-- ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

-- Terminal settings
config.scrollback_lines = 5000                      -- Number of lines to keep in scrollback buffer
config.term = 'xterm-256color'                      -- Terminal compatibility mode
config.audible_bell = 'Disabled'                    -- Disable audible bell
config.scroll_to_bottom_on_input = true             -- Auto-scroll to bottom when typing
config.debug_key_events = false                      -- Log key events for troubleshooting
config.prefer_to_spawn_tabs = true                  -- Prefer creating tabs instead of windows

-- Use default hyperlink detection rules
config.hyperlink_rules = wezterm.default_hyperlink_rules()

-- Environment variable handling
config.mux_env_remove = {
  'SSH_AUTH_SOCK',                                  -- Remove SSH agent variables that can cause issues
  'SSH_CLIENT',
}

-- Disable graphics systems that may cause conflicts
config.enable_wayland = false
config.enable_kitty_graphics = false

return config
